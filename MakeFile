# Compilador
CC = gcc
WINDRES = windres

# Flags de compilación
CFLAGS = -Wall -Wextra -Wpedantic -O3 -mwindows

# Flags de enlazado
LDFLAGS = -lwinmm

# Directorios de código fuente
SRC_DIR = code
RES_DIR = resources
DATA_DIR = data
MENU_DIR = menus
IA_DIR = ia

# Archivos fuente (todos los .c en code/ y resources/)
SRCS = $(wildcard $(SRC_DIR)/*.c $(DATA_DIR)/*.c $(RES_DIR)/*.c $(SRC_DIR)/$(MENU_DIR)/*.c $(SRC_DIR)/$(IA_DIR)/*.c) main.c

# Archivo de recursos
RC_FILE = resources.rc
RES_FILE = resources.res

# Archivos objeto (se reemplaza .c por .o)
OBJS = $(SRCS:.c=.o)

# Ejecutable final
TARGET = lunar_lander.exe

# Regla principal
all: $(TARGET)

# Compilar el ejecutable
$(TARGET): $(OBJS) 
	$(CC) $(CFLAGS) $(OBJS) -o $(TARGET) $(LDFLAGS)

# Compilar cada archivo fuente en un objeto
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Limpiar archivos compilados
clean:
	del /Q $(SRC_DIR)\*.o $(DATA_DIR)\*.o $(RES_DIR)\*.o $(SRC_DIR)\$(MENU_DIR)\*.o $(SRC_DIR)\$(IA_DIR)\*.o main.o $(TARGET) 2>nul

# Recompilar todo y ejecutar
run:
	mingw32-make -f Makefile clean
	mingw32-make -f Makefile
	./$(TARGET)
